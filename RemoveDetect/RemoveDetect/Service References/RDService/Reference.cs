//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoveDetect.RDService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonOutputTOfuserVe5_SBHZS", Namespace="http://schemas.datacontract.org/2004/07/RDService")]
    [System.SerializableAttribute()]
    public partial class CommonOutputTOfuserVe5_SBHZS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoveDetect.RDService.user dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoveDetect.RDService.user data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/RemoveDetectData")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string faceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IC {
            get {
                return this.ICField;
            }
            set {
                if ((object.ReferenceEquals(this.ICField, value) != true)) {
                    this.ICField = value;
                    this.RaisePropertyChanged("IC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string face {
            get {
                return this.faceField;
            }
            set {
                if ((object.ReferenceEquals(this.faceField, value) != true)) {
                    this.faceField = value;
                    this.RaisePropertyChanged("face");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupNum {
            get {
                return this.groupNumField;
            }
            set {
                if ((object.ReferenceEquals(this.groupNumField, value) != true)) {
                    this.groupNumField = value;
                    this.RaisePropertyChanged("groupNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string number {
            get {
                return this.numberField;
            }
            set {
                if ((object.ReferenceEquals(this.numberField, value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonOutput", Namespace="http://schemas.datacontract.org/2004/07/RDService")]
    [System.SerializableAttribute()]
    public partial class CommonOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageRowsOfArrayOfuserVe5_SBHZS", Namespace="http://schemas.datacontract.org/2004/07/RDService")]
    [System.SerializableAttribute()]
    public partial class PageRowsOfArrayOfuserVe5_SBHZS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoveDetect.RDService.user[] rowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoveDetect.RDService.user[] rows {
            get {
                return this.rowsField;
            }
            set {
                if ((object.ReferenceEquals(this.rowsField, value) != true)) {
                    this.rowsField = value;
                    this.RaisePropertyChanged("rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageRowsOfArrayOfdeviceVe5_SBHZS", Namespace="http://schemas.datacontract.org/2004/07/RDService")]
    [System.SerializableAttribute()]
    public partial class PageRowsOfArrayOfdeviceVe5_SBHZS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoveDetect.RDService.device[] rowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoveDetect.RDService.device[] rows {
            get {
                return this.rowsField;
            }
            set {
                if ((object.ReferenceEquals(this.rowsField, value) != true)) {
                    this.rowsField = value;
                    this.RaisePropertyChanged("rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="device", Namespace="http://schemas.datacontract.org/2004/07/RemoveDetectData")]
    [System.SerializableAttribute()]
    public partial class device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string layerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string limitTImeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string maskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string seatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNS {
            get {
                return this.DNSField;
            }
            set {
                if ((object.ReferenceEquals(this.DNSField, value) != true)) {
                    this.DNSField = value;
                    this.RaisePropertyChanged("DNS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPVersion {
            get {
                return this.IPVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.IPVersionField, value) != true)) {
                    this.IPVersionField = value;
                    this.RaisePropertyChanged("IPVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num {
            get {
                return this.NumField;
            }
            set {
                if ((object.ReferenceEquals(this.NumField, value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gate {
            get {
                return this.gateField;
            }
            set {
                if ((object.ReferenceEquals(this.gateField, value) != true)) {
                    this.gateField = value;
                    this.RaisePropertyChanged("gate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostName {
            get {
                return this.hostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.hostNameField, value) != true)) {
                    this.hostNameField = value;
                    this.RaisePropertyChanged("hostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string layer {
            get {
                return this.layerField;
            }
            set {
                if ((object.ReferenceEquals(this.layerField, value) != true)) {
                    this.layerField = value;
                    this.RaisePropertyChanged("layer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string limitTIme {
            get {
                return this.limitTImeField;
            }
            set {
                if ((object.ReferenceEquals(this.limitTImeField, value) != true)) {
                    this.limitTImeField = value;
                    this.RaisePropertyChanged("limitTIme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mask {
            get {
                return this.maskField;
            }
            set {
                if ((object.ReferenceEquals(this.maskField, value) != true)) {
                    this.maskField = value;
                    this.RaisePropertyChanged("mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string model {
            get {
                return this.modelField;
            }
            set {
                if ((object.ReferenceEquals(this.modelField, value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string seats {
            get {
                return this.seatsField;
            }
            set {
                if ((object.ReferenceEquals(this.seatsField, value) != true)) {
                    this.seatsField = value;
                    this.RaisePropertyChanged("seats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeField, value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RDService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logon", ReplyAction="http://tempuri.org/IService1/logonResponse")]
        RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS logon(string name, string password, string IC, string face);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/logon", ReplyAction="http://tempuri.org/IService1/logonResponse")]
        System.IAsyncResult Beginlogon(string name, string password, string IC, string face, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS Endlogon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editUser", ReplyAction="http://tempuri.org/IService1/editUserResponse")]
        RemoveDetect.RDService.CommonOutput editUser(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editUser", ReplyAction="http://tempuri.org/IService1/editUserResponse")]
        System.IAsyncResult BegineditUser(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.CommonOutput EndeditUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        RemoveDetect.RDService.CommonOutput addUser(string name, string password, string IC, string face, string phone, string number, string groupNum, string department);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.IAsyncResult BeginaddUser(string name, string password, string IC, string face, string phone, string number, string groupNum, string department, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.CommonOutput EndaddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserList", ReplyAction="http://tempuri.org/IService1/getUserListResponse")]
        RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS getUserList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getUserList", ReplyAction="http://tempuri.org/IService1/getUserListResponse")]
        System.IAsyncResult BegingetUserList(System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS EndgetUserList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchUsers", ReplyAction="http://tempuri.org/IService1/searchUsersResponse")]
        RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS searchUsers(string name, string department);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/searchUsers", ReplyAction="http://tempuri.org/IService1/searchUsersResponse")]
        System.IAsyncResult BeginsearchUsers(string name, string department, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS EndsearchUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        RemoveDetect.RDService.CommonOutput deleteUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        System.IAsyncResult BegindeleteUser(string id, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.CommonOutput EnddeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDevice", ReplyAction="http://tempuri.org/IService1/addDeviceResponse")]
        RemoveDetect.RDService.CommonOutput addDevice(string IP, string name, string mask, string gate, string type, string size, string Num, string model, string note, string layer, string seats, string limitTIme, string hostName, string IPVersion, string DNS);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addDevice", ReplyAction="http://tempuri.org/IService1/addDeviceResponse")]
        System.IAsyncResult BeginaddDevice(
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        RemoveDetect.RDService.CommonOutput EndaddDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editDevice", ReplyAction="http://tempuri.org/IService1/editDeviceResponse")]
        RemoveDetect.RDService.CommonOutput editDevice(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/editDevice", ReplyAction="http://tempuri.org/IService1/editDeviceResponse")]
        System.IAsyncResult BegineditDevice(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        RemoveDetect.RDService.CommonOutput EndeditDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDeviceList", ReplyAction="http://tempuri.org/IService1/getDeviceListResponse")]
        RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS getDeviceList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getDeviceList", ReplyAction="http://tempuri.org/IService1/getDeviceListResponse")]
        System.IAsyncResult BegingetDeviceList(System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS EndgetDeviceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToolsPosition", ReplyAction="http://tempuri.org/IService1/addToolsPositionResponse")]
        RemoveDetect.RDService.CommonOutput addToolsPosition(string layer, string seat, string isok);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addToolsPosition", ReplyAction="http://tempuri.org/IService1/addToolsPositionResponse")]
        System.IAsyncResult BeginaddToolsPosition(string layer, string seat, string isok, System.AsyncCallback callback, object asyncState);
        
        RemoveDetect.RDService.CommonOutput EndaddToolsPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchTime", ReplyAction="http://tempuri.org/IService1/searchTimeResponse")]
        string searchTime(string deviceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/searchTime", ReplyAction="http://tempuri.org/IService1/searchTimeResponse")]
        System.IAsyncResult BeginsearchTime(string deviceID, System.AsyncCallback callback, object asyncState);
        
        string EndsearchTime(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : RemoveDetect.RDService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class logonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public logonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class searchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public searchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class editDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public editDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDeviceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDeviceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addToolsPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addToolsPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RemoveDetect.RDService.CommonOutput Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RemoveDetect.RDService.CommonOutput)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class searchTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public searchTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<RemoveDetect.RDService.IService1>, RemoveDetect.RDService.IService1 {
        
        private BeginOperationDelegate onBeginlogonDelegate;
        
        private EndOperationDelegate onEndlogonDelegate;
        
        private System.Threading.SendOrPostCallback onlogonCompletedDelegate;
        
        private BeginOperationDelegate onBegineditUserDelegate;
        
        private EndOperationDelegate onEndeditUserDelegate;
        
        private System.Threading.SendOrPostCallback oneditUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddUserDelegate;
        
        private EndOperationDelegate onEndaddUserDelegate;
        
        private System.Threading.SendOrPostCallback onaddUserCompletedDelegate;
        
        private BeginOperationDelegate onBegingetUserListDelegate;
        
        private EndOperationDelegate onEndgetUserListDelegate;
        
        private System.Threading.SendOrPostCallback ongetUserListCompletedDelegate;
        
        private BeginOperationDelegate onBeginsearchUsersDelegate;
        
        private EndOperationDelegate onEndsearchUsersDelegate;
        
        private System.Threading.SendOrPostCallback onsearchUsersCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteUserDelegate;
        
        private EndOperationDelegate onEnddeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddDeviceDelegate;
        
        private EndOperationDelegate onEndaddDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onaddDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBegineditDeviceDelegate;
        
        private EndOperationDelegate onEndeditDeviceDelegate;
        
        private System.Threading.SendOrPostCallback oneditDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDeviceListDelegate;
        
        private EndOperationDelegate onEndgetDeviceListDelegate;
        
        private System.Threading.SendOrPostCallback ongetDeviceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddToolsPositionDelegate;
        
        private EndOperationDelegate onEndaddToolsPositionDelegate;
        
        private System.Threading.SendOrPostCallback onaddToolsPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginsearchTimeDelegate;
        
        private EndOperationDelegate onEndsearchTimeDelegate;
        
        private System.Threading.SendOrPostCallback onsearchTimeCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<logonCompletedEventArgs> logonCompleted;
        
        public event System.EventHandler<editUserCompletedEventArgs> editUserCompleted;
        
        public event System.EventHandler<addUserCompletedEventArgs> addUserCompleted;
        
        public event System.EventHandler<getUserListCompletedEventArgs> getUserListCompleted;
        
        public event System.EventHandler<searchUsersCompletedEventArgs> searchUsersCompleted;
        
        public event System.EventHandler<deleteUserCompletedEventArgs> deleteUserCompleted;
        
        public event System.EventHandler<addDeviceCompletedEventArgs> addDeviceCompleted;
        
        public event System.EventHandler<editDeviceCompletedEventArgs> editDeviceCompleted;
        
        public event System.EventHandler<getDeviceListCompletedEventArgs> getDeviceListCompleted;
        
        public event System.EventHandler<addToolsPositionCompletedEventArgs> addToolsPositionCompleted;
        
        public event System.EventHandler<searchTimeCompletedEventArgs> searchTimeCompleted;
        
        public RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS logon(string name, string password, string IC, string face) {
            return base.Channel.logon(name, password, IC, face);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginlogon(string name, string password, string IC, string face, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginlogon(name, password, IC, face, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS Endlogon(System.IAsyncResult result) {
            return base.Channel.Endlogon(result);
        }
        
        private System.IAsyncResult OnBeginlogon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string IC = ((string)(inValues[2]));
            string face = ((string)(inValues[3]));
            return this.Beginlogon(name, password, IC, face, callback, asyncState);
        }
        
        private object[] OnEndlogon(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutputTOfuserVe5_SBHZS retVal = this.Endlogon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlogonCompleted(object state) {
            if ((this.logonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.logonCompleted(this, new logonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void logonAsync(string name, string password, string IC, string face) {
            this.logonAsync(name, password, IC, face, null);
        }
        
        public void logonAsync(string name, string password, string IC, string face, object userState) {
            if ((this.onBeginlogonDelegate == null)) {
                this.onBeginlogonDelegate = new BeginOperationDelegate(this.OnBeginlogon);
            }
            if ((this.onEndlogonDelegate == null)) {
                this.onEndlogonDelegate = new EndOperationDelegate(this.OnEndlogon);
            }
            if ((this.onlogonCompletedDelegate == null)) {
                this.onlogonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlogonCompleted);
            }
            base.InvokeAsync(this.onBeginlogonDelegate, new object[] {
                        name,
                        password,
                        IC,
                        face}, this.onEndlogonDelegate, this.onlogonCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput editUser(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department) {
            return base.Channel.editUser(id, name, password, IC, face, phone, number, groupNum, department);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditUser(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegineditUser(id, name, password, IC, face, phone, number, groupNum, department, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EndeditUser(System.IAsyncResult result) {
            return base.Channel.EndeditUser(result);
        }
        
        private System.IAsyncResult OnBegineditUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            string IC = ((string)(inValues[3]));
            string face = ((string)(inValues[4]));
            string phone = ((string)(inValues[5]));
            string number = ((string)(inValues[6]));
            string groupNum = ((string)(inValues[7]));
            string department = ((string)(inValues[8]));
            return this.BegineditUser(id, name, password, IC, face, phone, number, groupNum, department, callback, asyncState);
        }
        
        private object[] OnEndeditUser(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EndeditUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OneditUserCompleted(object state) {
            if ((this.editUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editUserCompleted(this, new editUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editUserAsync(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department) {
            this.editUserAsync(id, name, password, IC, face, phone, number, groupNum, department, null);
        }
        
        public void editUserAsync(string id, string name, string password, string IC, string face, string phone, string number, string groupNum, string department, object userState) {
            if ((this.onBegineditUserDelegate == null)) {
                this.onBegineditUserDelegate = new BeginOperationDelegate(this.OnBegineditUser);
            }
            if ((this.onEndeditUserDelegate == null)) {
                this.onEndeditUserDelegate = new EndOperationDelegate(this.OnEndeditUser);
            }
            if ((this.oneditUserCompletedDelegate == null)) {
                this.oneditUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditUserCompleted);
            }
            base.InvokeAsync(this.onBegineditUserDelegate, new object[] {
                        id,
                        name,
                        password,
                        IC,
                        face,
                        phone,
                        number,
                        groupNum,
                        department}, this.onEndeditUserDelegate, this.oneditUserCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput addUser(string name, string password, string IC, string face, string phone, string number, string groupNum, string department) {
            return base.Channel.addUser(name, password, IC, face, phone, number, groupNum, department);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddUser(string name, string password, string IC, string face, string phone, string number, string groupNum, string department, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddUser(name, password, IC, face, phone, number, groupNum, department, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EndaddUser(System.IAsyncResult result) {
            return base.Channel.EndaddUser(result);
        }
        
        private System.IAsyncResult OnBeginaddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string IC = ((string)(inValues[2]));
            string face = ((string)(inValues[3]));
            string phone = ((string)(inValues[4]));
            string number = ((string)(inValues[5]));
            string groupNum = ((string)(inValues[6]));
            string department = ((string)(inValues[7]));
            return this.BeginaddUser(name, password, IC, face, phone, number, groupNum, department, callback, asyncState);
        }
        
        private object[] OnEndaddUser(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EndaddUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddUserCompleted(object state) {
            if ((this.addUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addUserCompleted(this, new addUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addUserAsync(string name, string password, string IC, string face, string phone, string number, string groupNum, string department) {
            this.addUserAsync(name, password, IC, face, phone, number, groupNum, department, null);
        }
        
        public void addUserAsync(string name, string password, string IC, string face, string phone, string number, string groupNum, string department, object userState) {
            if ((this.onBeginaddUserDelegate == null)) {
                this.onBeginaddUserDelegate = new BeginOperationDelegate(this.OnBeginaddUser);
            }
            if ((this.onEndaddUserDelegate == null)) {
                this.onEndaddUserDelegate = new EndOperationDelegate(this.OnEndaddUser);
            }
            if ((this.onaddUserCompletedDelegate == null)) {
                this.onaddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddUserCompleted);
            }
            base.InvokeAsync(this.onBeginaddUserDelegate, new object[] {
                        name,
                        password,
                        IC,
                        face,
                        phone,
                        number,
                        groupNum,
                        department}, this.onEndaddUserDelegate, this.onaddUserCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS getUserList() {
            return base.Channel.getUserList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetUserList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetUserList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS EndgetUserList(System.IAsyncResult result) {
            return base.Channel.EndgetUserList(result);
        }
        
        private System.IAsyncResult OnBegingetUserList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetUserList(callback, asyncState);
        }
        
        private object[] OnEndgetUserList(System.IAsyncResult result) {
            RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS retVal = this.EndgetUserList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetUserListCompleted(object state) {
            if ((this.getUserListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getUserListCompleted(this, new getUserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getUserListAsync() {
            this.getUserListAsync(null);
        }
        
        public void getUserListAsync(object userState) {
            if ((this.onBegingetUserListDelegate == null)) {
                this.onBegingetUserListDelegate = new BeginOperationDelegate(this.OnBegingetUserList);
            }
            if ((this.onEndgetUserListDelegate == null)) {
                this.onEndgetUserListDelegate = new EndOperationDelegate(this.OnEndgetUserList);
            }
            if ((this.ongetUserListCompletedDelegate == null)) {
                this.ongetUserListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetUserListCompleted);
            }
            base.InvokeAsync(this.onBegingetUserListDelegate, null, this.onEndgetUserListDelegate, this.ongetUserListCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS searchUsers(string name, string department) {
            return base.Channel.searchUsers(name, department);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsearchUsers(string name, string department, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsearchUsers(name, department, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS EndsearchUsers(System.IAsyncResult result) {
            return base.Channel.EndsearchUsers(result);
        }
        
        private System.IAsyncResult OnBeginsearchUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string department = ((string)(inValues[1]));
            return this.BeginsearchUsers(name, department, callback, asyncState);
        }
        
        private object[] OnEndsearchUsers(System.IAsyncResult result) {
            RemoveDetect.RDService.PageRowsOfArrayOfuserVe5_SBHZS retVal = this.EndsearchUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsearchUsersCompleted(object state) {
            if ((this.searchUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.searchUsersCompleted(this, new searchUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void searchUsersAsync(string name, string department) {
            this.searchUsersAsync(name, department, null);
        }
        
        public void searchUsersAsync(string name, string department, object userState) {
            if ((this.onBeginsearchUsersDelegate == null)) {
                this.onBeginsearchUsersDelegate = new BeginOperationDelegate(this.OnBeginsearchUsers);
            }
            if ((this.onEndsearchUsersDelegate == null)) {
                this.onEndsearchUsersDelegate = new EndOperationDelegate(this.OnEndsearchUsers);
            }
            if ((this.onsearchUsersCompletedDelegate == null)) {
                this.onsearchUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsearchUsersCompleted);
            }
            base.InvokeAsync(this.onBeginsearchUsersDelegate, new object[] {
                        name,
                        department}, this.onEndsearchUsersDelegate, this.onsearchUsersCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput deleteUser(string id) {
            return base.Channel.deleteUser(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteUser(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteUser(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EnddeleteUser(System.IAsyncResult result) {
            return base.Channel.EnddeleteUser(result);
        }
        
        private System.IAsyncResult OnBegindeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BegindeleteUser(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteUser(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EnddeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OndeleteUserCompleted(object state) {
            if ((this.deleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteUserAsync(string id) {
            this.deleteUserAsync(id, null);
        }
        
        public void deleteUserAsync(string id, object userState) {
            if ((this.onBegindeleteUserDelegate == null)) {
                this.onBegindeleteUserDelegate = new BeginOperationDelegate(this.OnBegindeleteUser);
            }
            if ((this.onEnddeleteUserDelegate == null)) {
                this.onEnddeleteUserDelegate = new EndOperationDelegate(this.OnEnddeleteUser);
            }
            if ((this.ondeleteUserCompletedDelegate == null)) {
                this.ondeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteUserCompleted);
            }
            base.InvokeAsync(this.onBegindeleteUserDelegate, new object[] {
                        id}, this.onEnddeleteUserDelegate, this.ondeleteUserCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput addDevice(string IP, string name, string mask, string gate, string type, string size, string Num, string model, string note, string layer, string seats, string limitTIme, string hostName, string IPVersion, string DNS) {
            return base.Channel.addDevice(IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddDevice(
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginaddDevice(IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EndaddDevice(System.IAsyncResult result) {
            return base.Channel.EndaddDevice(result);
        }
        
        private System.IAsyncResult OnBeginaddDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string IP = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            string mask = ((string)(inValues[2]));
            string gate = ((string)(inValues[3]));
            string type = ((string)(inValues[4]));
            string size = ((string)(inValues[5]));
            string Num = ((string)(inValues[6]));
            string model = ((string)(inValues[7]));
            string note = ((string)(inValues[8]));
            string layer = ((string)(inValues[9]));
            string seats = ((string)(inValues[10]));
            string limitTIme = ((string)(inValues[11]));
            string hostName = ((string)(inValues[12]));
            string IPVersion = ((string)(inValues[13]));
            string DNS = ((string)(inValues[14]));
            return this.BeginaddDevice(IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, callback, asyncState);
        }
        
        private object[] OnEndaddDevice(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EndaddDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddDeviceCompleted(object state) {
            if ((this.addDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addDeviceCompleted(this, new addDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addDeviceAsync(string IP, string name, string mask, string gate, string type, string size, string Num, string model, string note, string layer, string seats, string limitTIme, string hostName, string IPVersion, string DNS) {
            this.addDeviceAsync(IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, null);
        }
        
        public void addDeviceAsync(
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    object userState) {
            if ((this.onBeginaddDeviceDelegate == null)) {
                this.onBeginaddDeviceDelegate = new BeginOperationDelegate(this.OnBeginaddDevice);
            }
            if ((this.onEndaddDeviceDelegate == null)) {
                this.onEndaddDeviceDelegate = new EndOperationDelegate(this.OnEndaddDevice);
            }
            if ((this.onaddDeviceCompletedDelegate == null)) {
                this.onaddDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginaddDeviceDelegate, new object[] {
                        IP,
                        name,
                        mask,
                        gate,
                        type,
                        size,
                        Num,
                        model,
                        note,
                        layer,
                        seats,
                        limitTIme,
                        hostName,
                        IPVersion,
                        DNS}, this.onEndaddDeviceDelegate, this.onaddDeviceCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput editDevice(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS) {
            return base.Channel.editDevice(id, IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegineditDevice(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BegineditDevice(id, IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EndeditDevice(System.IAsyncResult result) {
            return base.Channel.EndeditDevice(result);
        }
        
        private System.IAsyncResult OnBegineditDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string IP = ((string)(inValues[1]));
            string name = ((string)(inValues[2]));
            string mask = ((string)(inValues[3]));
            string gate = ((string)(inValues[4]));
            string type = ((string)(inValues[5]));
            string size = ((string)(inValues[6]));
            string Num = ((string)(inValues[7]));
            string model = ((string)(inValues[8]));
            string note = ((string)(inValues[9]));
            string layer = ((string)(inValues[10]));
            string seats = ((string)(inValues[11]));
            string limitTIme = ((string)(inValues[12]));
            string hostName = ((string)(inValues[13]));
            string IPVersion = ((string)(inValues[14]));
            string DNS = ((string)(inValues[15]));
            return this.BegineditDevice(id, IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, callback, asyncState);
        }
        
        private object[] OnEndeditDevice(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EndeditDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OneditDeviceCompleted(object state) {
            if ((this.editDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.editDeviceCompleted(this, new editDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void editDeviceAsync(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS) {
            this.editDeviceAsync(id, IP, name, mask, gate, type, size, Num, model, note, layer, seats, limitTIme, hostName, IPVersion, DNS, null);
        }
        
        public void editDeviceAsync(
                    string id, 
                    string IP, 
                    string name, 
                    string mask, 
                    string gate, 
                    string type, 
                    string size, 
                    string Num, 
                    string model, 
                    string note, 
                    string layer, 
                    string seats, 
                    string limitTIme, 
                    string hostName, 
                    string IPVersion, 
                    string DNS, 
                    object userState) {
            if ((this.onBegineditDeviceDelegate == null)) {
                this.onBegineditDeviceDelegate = new BeginOperationDelegate(this.OnBegineditDevice);
            }
            if ((this.onEndeditDeviceDelegate == null)) {
                this.onEndeditDeviceDelegate = new EndOperationDelegate(this.OnEndeditDevice);
            }
            if ((this.oneditDeviceCompletedDelegate == null)) {
                this.oneditDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OneditDeviceCompleted);
            }
            base.InvokeAsync(this.onBegineditDeviceDelegate, new object[] {
                        id,
                        IP,
                        name,
                        mask,
                        gate,
                        type,
                        size,
                        Num,
                        model,
                        note,
                        layer,
                        seats,
                        limitTIme,
                        hostName,
                        IPVersion,
                        DNS}, this.onEndeditDeviceDelegate, this.oneditDeviceCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS getDeviceList() {
            return base.Channel.getDeviceList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetDeviceList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDeviceList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS EndgetDeviceList(System.IAsyncResult result) {
            return base.Channel.EndgetDeviceList(result);
        }
        
        private System.IAsyncResult OnBegingetDeviceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetDeviceList(callback, asyncState);
        }
        
        private object[] OnEndgetDeviceList(System.IAsyncResult result) {
            RemoveDetect.RDService.PageRowsOfArrayOfdeviceVe5_SBHZS retVal = this.EndgetDeviceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDeviceListCompleted(object state) {
            if ((this.getDeviceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDeviceListCompleted(this, new getDeviceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDeviceListAsync() {
            this.getDeviceListAsync(null);
        }
        
        public void getDeviceListAsync(object userState) {
            if ((this.onBegingetDeviceListDelegate == null)) {
                this.onBegingetDeviceListDelegate = new BeginOperationDelegate(this.OnBegingetDeviceList);
            }
            if ((this.onEndgetDeviceListDelegate == null)) {
                this.onEndgetDeviceListDelegate = new EndOperationDelegate(this.OnEndgetDeviceList);
            }
            if ((this.ongetDeviceListCompletedDelegate == null)) {
                this.ongetDeviceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDeviceListCompleted);
            }
            base.InvokeAsync(this.onBegingetDeviceListDelegate, null, this.onEndgetDeviceListDelegate, this.ongetDeviceListCompletedDelegate, userState);
        }
        
        public RemoveDetect.RDService.CommonOutput addToolsPosition(string layer, string seat, string isok) {
            return base.Channel.addToolsPosition(layer, seat, isok);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddToolsPosition(string layer, string seat, string isok, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddToolsPosition(layer, seat, isok, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RemoveDetect.RDService.CommonOutput EndaddToolsPosition(System.IAsyncResult result) {
            return base.Channel.EndaddToolsPosition(result);
        }
        
        private System.IAsyncResult OnBeginaddToolsPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string layer = ((string)(inValues[0]));
            string seat = ((string)(inValues[1]));
            string isok = ((string)(inValues[2]));
            return this.BeginaddToolsPosition(layer, seat, isok, callback, asyncState);
        }
        
        private object[] OnEndaddToolsPosition(System.IAsyncResult result) {
            RemoveDetect.RDService.CommonOutput retVal = this.EndaddToolsPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddToolsPositionCompleted(object state) {
            if ((this.addToolsPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addToolsPositionCompleted(this, new addToolsPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addToolsPositionAsync(string layer, string seat, string isok) {
            this.addToolsPositionAsync(layer, seat, isok, null);
        }
        
        public void addToolsPositionAsync(string layer, string seat, string isok, object userState) {
            if ((this.onBeginaddToolsPositionDelegate == null)) {
                this.onBeginaddToolsPositionDelegate = new BeginOperationDelegate(this.OnBeginaddToolsPosition);
            }
            if ((this.onEndaddToolsPositionDelegate == null)) {
                this.onEndaddToolsPositionDelegate = new EndOperationDelegate(this.OnEndaddToolsPosition);
            }
            if ((this.onaddToolsPositionCompletedDelegate == null)) {
                this.onaddToolsPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddToolsPositionCompleted);
            }
            base.InvokeAsync(this.onBeginaddToolsPositionDelegate, new object[] {
                        layer,
                        seat,
                        isok}, this.onEndaddToolsPositionDelegate, this.onaddToolsPositionCompletedDelegate, userState);
        }
        
        public string searchTime(string deviceID) {
            return base.Channel.searchTime(deviceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsearchTime(string deviceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsearchTime(deviceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndsearchTime(System.IAsyncResult result) {
            return base.Channel.EndsearchTime(result);
        }
        
        private System.IAsyncResult OnBeginsearchTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deviceID = ((string)(inValues[0]));
            return this.BeginsearchTime(deviceID, callback, asyncState);
        }
        
        private object[] OnEndsearchTime(System.IAsyncResult result) {
            string retVal = this.EndsearchTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsearchTimeCompleted(object state) {
            if ((this.searchTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.searchTimeCompleted(this, new searchTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void searchTimeAsync(string deviceID) {
            this.searchTimeAsync(deviceID, null);
        }
        
        public void searchTimeAsync(string deviceID, object userState) {
            if ((this.onBeginsearchTimeDelegate == null)) {
                this.onBeginsearchTimeDelegate = new BeginOperationDelegate(this.OnBeginsearchTime);
            }
            if ((this.onEndsearchTimeDelegate == null)) {
                this.onEndsearchTimeDelegate = new EndOperationDelegate(this.OnEndsearchTime);
            }
            if ((this.onsearchTimeCompletedDelegate == null)) {
                this.onsearchTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsearchTimeCompleted);
            }
            base.InvokeAsync(this.onBeginsearchTimeDelegate, new object[] {
                        deviceID}, this.onEndsearchTimeDelegate, this.onsearchTimeCompletedDelegate, userState);
        }
    }
}
