#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoveDetectData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RD")]
	public partial class RDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertcofig(cofig instance);
    partial void Updatecofig(cofig instance);
    partial void Deletecofig(cofig instance);
    partial void Inserttools(tools instance);
    partial void Updatetools(tools instance);
    partial void Deletetools(tools instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void InsertloginLog(loginLog instance);
    partial void UpdateloginLog(loginLog instance);
    partial void DeleteloginLog(loginLog instance);
    partial void Insertdevice(device instance);
    partial void Updatedevice(device instance);
    partial void Deletedevice(device instance);
    partial void InsertdeviceState(deviceState instance);
    partial void UpdatedeviceState(deviceState instance);
    partial void DeletedeviceState(deviceState instance);
    #endregion
		
		public RDDataContext() : 
				base(global::RemoveDetectData.Properties.Settings.Default.RDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cofig> cofig
		{
			get
			{
				return this.GetTable<cofig>();
			}
		}
		
		public System.Data.Linq.Table<tools> tools
		{
			get
			{
				return this.GetTable<tools>();
			}
		}
		
		public System.Data.Linq.Table<role> role
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<user> user
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<loginLog> loginLog
		{
			get
			{
				return this.GetTable<loginLog>();
			}
		}
		
		public System.Data.Linq.Table<device> device
		{
			get
			{
				return this.GetTable<device>();
			}
		}
		
		public System.Data.Linq.Table<deviceState> deviceState
		{
			get
			{
				return this.GetTable<deviceState>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cofig")]
	public partial class cofig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public cofig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tools")]
	public partial class tools : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Number;
		
		private string _address;
		
		private string _picture;
		
		private System.Nullable<int> _x;
		
		private System.Nullable<int> _y;
		
		private System.Nullable<int> _w;
		
		private System.Nullable<int> _h;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OnxChanging(System.Nullable<int> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<int> value);
    partial void OnyChanged();
    partial void OnwChanging(System.Nullable<int> value);
    partial void OnwChanged();
    partial void OnhChanging(System.Nullable<int> value);
    partial void OnhChanged();
    #endregion
		
		public tools()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(50)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int")]
		public System.Nullable<int> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Int")]
		public System.Nullable<int> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w", DbType="Int")]
		public System.Nullable<int> w
		{
			get
			{
				return this._w;
			}
			set
			{
				if ((this._w != value))
				{
					this.OnwChanging(value);
					this.SendPropertyChanging();
					this._w = value;
					this.SendPropertyChanged("w");
					this.OnwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_h", DbType="Int")]
		public System.Nullable<int> h
		{
			get
			{
				return this._h;
			}
			set
			{
				if ((this._h != value))
				{
					this.OnhChanging(value);
					this.SendPropertyChanging();
					this._h = value;
					this.SendPropertyChanged("h");
					this.OnhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.role")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _roleID;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnroleIDChanging(string value);
    partial void OnroleIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleID", DbType="NVarChar(50)")]
		public string roleID
		{
			get
			{
				return this._roleID;
			}
			set
			{
				if ((this._roleID != value))
				{
					this.OnroleIDChanging(value);
					this.SendPropertyChanging();
					this._roleID = value;
					this.SendPropertyChanged("roleID");
					this.OnroleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _password;
		
		private string _IC;
		
		private string _face;
		
		private string _phone;
		
		private string _number;
		
		private string _groupNum;
		
		private string _department;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnICChanging(string value);
    partial void OnICChanged();
    partial void OnfaceChanging(string value);
    partial void OnfaceChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnnumberChanging(string value);
    partial void OnnumberChanged();
    partial void OngroupNumChanging(string value);
    partial void OngroupNumChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IC", DbType="NVarChar(50)")]
		public string IC
		{
			get
			{
				return this._IC;
			}
			set
			{
				if ((this._IC != value))
				{
					this.OnICChanging(value);
					this.SendPropertyChanging();
					this._IC = value;
					this.SendPropertyChanged("IC");
					this.OnICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_face", DbType="NVarChar(50)")]
		public string face
		{
			get
			{
				return this._face;
			}
			set
			{
				if ((this._face != value))
				{
					this.OnfaceChanging(value);
					this.SendPropertyChanging();
					this._face = value;
					this.SendPropertyChanged("face");
					this.OnfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="NVarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupNum", DbType="NVarChar(50)")]
		public string groupNum
		{
			get
			{
				return this._groupNum;
			}
			set
			{
				if ((this._groupNum != value))
				{
					this.OngroupNumChanging(value);
					this.SendPropertyChanging();
					this._groupNum = value;
					this.SendPropertyChanged("groupNum");
					this.OngroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="NVarChar(50)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.loginLog")]
	public partial class loginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _userID;
		
		private string _time;
		
		private string _isOK;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnisOKChanging(string value);
    partial void OnisOKChanged();
    #endregion
		
		public loginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="NVarChar(50)")]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(50)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOK", DbType="NVarChar(50)")]
		public string isOK
		{
			get
			{
				return this._isOK;
			}
			set
			{
				if ((this._isOK != value))
				{
					this.OnisOKChanging(value);
					this.SendPropertyChanging();
					this._isOK = value;
					this.SendPropertyChanged("isOK");
					this.OnisOKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.device")]
	public partial class device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _IP;
		
		private string _name;
		
		private string _mask;
		
		private string _gate;
		
		private string _type;
		
		private string _size;
		
		private string _Num;
		
		private string _model;
		
		private string _note;
		
		private string _layer;
		
		private string _seats;
		
		private string _limitTIme;
		
		private string _hostName;
		
		private string _IPVersion;
		
		private string _DNS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmaskChanging(string value);
    partial void OnmaskChanged();
    partial void OngateChanging(string value);
    partial void OngateChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnNumChanging(string value);
    partial void OnNumChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnlayerChanging(string value);
    partial void OnlayerChanged();
    partial void OnseatsChanging(string value);
    partial void OnseatsChanged();
    partial void OnlimitTImeChanging(string value);
    partial void OnlimitTImeChanged();
    partial void OnhostNameChanging(string value);
    partial void OnhostNameChanged();
    partial void OnIPVersionChanging(string value);
    partial void OnIPVersionChanged();
    partial void OnDNSChanging(string value);
    partial void OnDNSChanged();
    #endregion
		
		public device()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mask", DbType="NVarChar(50)")]
		public string mask
		{
			get
			{
				return this._mask;
			}
			set
			{
				if ((this._mask != value))
				{
					this.OnmaskChanging(value);
					this.SendPropertyChanging();
					this._mask = value;
					this.SendPropertyChanged("mask");
					this.OnmaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gate", DbType="NVarChar(50)")]
		public string gate
		{
			get
			{
				return this._gate;
			}
			set
			{
				if ((this._gate != value))
				{
					this.OngateChanging(value);
					this.SendPropertyChanging();
					this._gate = value;
					this.SendPropertyChanged("gate");
					this.OngateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="NVarChar(50)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="NVarChar(50)")]
		public string Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="NVarChar(50)")]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(50)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_layer", DbType="NVarChar(50)")]
		public string layer
		{
			get
			{
				return this._layer;
			}
			set
			{
				if ((this._layer != value))
				{
					this.OnlayerChanging(value);
					this.SendPropertyChanging();
					this._layer = value;
					this.SendPropertyChanged("layer");
					this.OnlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seats", DbType="NVarChar(50)")]
		public string seats
		{
			get
			{
				return this._seats;
			}
			set
			{
				if ((this._seats != value))
				{
					this.OnseatsChanging(value);
					this.SendPropertyChanging();
					this._seats = value;
					this.SendPropertyChanged("seats");
					this.OnseatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limitTIme", DbType="NVarChar(50)")]
		public string limitTIme
		{
			get
			{
				return this._limitTIme;
			}
			set
			{
				if ((this._limitTIme != value))
				{
					this.OnlimitTImeChanging(value);
					this.SendPropertyChanging();
					this._limitTIme = value;
					this.SendPropertyChanged("limitTIme");
					this.OnlimitTImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostName", DbType="NVarChar(50)")]
		public string hostName
		{
			get
			{
				return this._hostName;
			}
			set
			{
				if ((this._hostName != value))
				{
					this.OnhostNameChanging(value);
					this.SendPropertyChanging();
					this._hostName = value;
					this.SendPropertyChanged("hostName");
					this.OnhostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPVersion", DbType="NVarChar(50)")]
		public string IPVersion
		{
			get
			{
				return this._IPVersion;
			}
			set
			{
				if ((this._IPVersion != value))
				{
					this.OnIPVersionChanging(value);
					this.SendPropertyChanging();
					this._IPVersion = value;
					this.SendPropertyChanged("IPVersion");
					this.OnIPVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNS", DbType="NVarChar(50)")]
		public string DNS
		{
			get
			{
				return this._DNS;
			}
			set
			{
				if ((this._DNS != value))
				{
					this.OnDNSChanging(value);
					this.SendPropertyChanging();
					this._DNS = value;
					this.SendPropertyChanged("DNS");
					this.OnDNSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deviceState")]
	public partial class deviceState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _layerNum;
		
		private string _seatNum;
		
		private string _isok;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnlayerNumChanging(string value);
    partial void OnlayerNumChanged();
    partial void OnseatNumChanging(string value);
    partial void OnseatNumChanged();
    partial void OnisokChanging(string value);
    partial void OnisokChanged();
    #endregion
		
		public deviceState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_layerNum", DbType="NVarChar(50)")]
		public string layerNum
		{
			get
			{
				return this._layerNum;
			}
			set
			{
				if ((this._layerNum != value))
				{
					this.OnlayerNumChanging(value);
					this.SendPropertyChanging();
					this._layerNum = value;
					this.SendPropertyChanged("layerNum");
					this.OnlayerNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seatNum", DbType="NVarChar(50)")]
		public string seatNum
		{
			get
			{
				return this._seatNum;
			}
			set
			{
				if ((this._seatNum != value))
				{
					this.OnseatNumChanging(value);
					this.SendPropertyChanging();
					this._seatNum = value;
					this.SendPropertyChanged("seatNum");
					this.OnseatNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isok", DbType="NVarChar(50)")]
		public string isok
		{
			get
			{
				return this._isok;
			}
			set
			{
				if ((this._isok != value))
				{
					this.OnisokChanging(value);
					this.SendPropertyChanging();
					this._isok = value;
					this.SendPropertyChanged("isok");
					this.OnisokChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
